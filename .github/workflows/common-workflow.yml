name: Common CI

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      build_type: 
        required: true
        type: string
env:
  ISSM_DIR: ${{ github.workspace }}
  
jobs:
  build:
    name: build-ISSM-${{ inputs.os }}-${{ inputs.build_type}}
    runs-on: ${{ inputs.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
          
      - name: Cache externalpackages
        uses: actions/cache@v3
        id: cache-externalpackages
        env:
          cache-name: cache-externalpackages-${{ inputs.build_type }}
        with:
          path: |
            ${{ env.ISSM_DIR }}/externalpackages/
            !${{ env.ISSM_DIR }}/externalpackages/petsc/src/
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          
      - name: Install External packages
        if: ${{ ( inputs.build_type == 'basic') && (steps.cache-externalpackages.outputs.cache-hit != 'true') }}
        run: |
          cd $ISSM_DIR/externalpackages/triangle && ./install-linux.sh
          cd $ISSM_DIR/externalpackages/m1qn3    && ./install-linux.sh
          cd $ISSM_DIR/externalpackages/petsc    && ./install-3.21-linux.sh
          cd $ISSM_DIR/externalpackages/semic    && ./install.sh
          
      - name: Install External packages for AD
        if: ${{ ( inputs.build_type == 'codipack') && (steps.cache-externalpackages.outputs.cache-hit != 'true') }}
        run: |
          cd $ISSM_DIR/externalpackages/triangle   && ./install-linux.sh
          cd $ISSM_DIR/externalpackages/m1qn3      && ./install-linux.sh
          cd $ISSM_DIR/externalpackages/petsc      && ./install-3.20-linux.sh
          cd $ISSM_DIR/externalpackages/gsl        && ./install.sh
          cd $ISSM_DIR/externalpackages/codipack   && ./install.sh
          cd $ISSM_DIR/externalpackages/medipack   && ./install.sh
          
      - name: Get MATLAB
        id:   setup-matlab
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          cache: true
          
      - name: Reconfigure ISSM without AD
        if: ${{ inputs.build_type == 'basic'}}
        run: |
          source $ISSM_DIR/etc/environment.sh
          autoreconf -ivf
          ./configure --prefix=${ISSM_DIR} \
          --disable-static \
          --enable-development \
          --enable-debugging \
          --with-numthreads=4 \
          --with-matlab-dir=${{ steps.setup-matlab.outputs.matlabroot }} \
          --with-fortran-lib="-L/usr/lib/x86_64-linux-gnu -lgfortran" \
          --with-mpi-include="${ISSM_DIR}/externalpackages/petsc/install/include" \
          --with-mpi-libflags="-L${ISSM_DIR}/externalpackages/petsc/install/lib -lmpi -lmpicxx -lmpifort" \
          --with-petsc-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-blas-lapack-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-metis-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-parmetis-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-scalapack-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-mumps-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-triangle-dir="${ISSM_DIR}/externalpackages/triangle/install" \
          --with-semic-dir="${ISSM_DIR}/externalpackages/semic/install" \
          --with-m1qn3-dir="${ISSM_DIR}/externalpackages/m1qn3/install"
          
      - name: Reconfigure ISSM with Codipack
        if: ${{ inputs.build_type == 'codipack'}}
        run: |
          source $ISSM_DIR/etc/environment.sh
          autoreconf -ivf
          ./configure --prefix=${ISSM_DIR} \
          --enable-tape-alloc \
          --enable-development \
          --enable-debugging \
          --with-numthreads=4 \
          --without-kriging \
          --without-kml \
          --without-Sealevelchange \
          --without-Love \
          --with-matlab-dir=${{ steps.setup-matlab.outputs.matlabroot }} \
          --with-fortran-lib="-L/usr/lib/x86_64-linux-gnu -lgfortran" \
          --with-mpi-include="${ISSM_DIR}/externalpackages/petsc/install/include" \
          --with-mpi-libflags="-L${ISSM_DIR}/externalpackages/petsc/install/lib -lmpi -lmpicxx -lmpifort" \
          --with-blas-lapack-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-metis-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-parmetis-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-scalapack-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-mumps-dir="${ISSM_DIR}/externalpackages/petsc/install" \
          --with-triangle-dir="${ISSM_DIR}/externalpackages/triangle/install" \
          --with-gsl-dir="${ISSM_DIR}/externalpackages/gsl/install" \
          --with-m1qn3-dir="${ISSM_DIR}/externalpackages/m1qn3/install" \
          --with-medipack-dir="${ISSM_DIR}/externalpackages/medipack/install" \
          --with-codipack-dir="${ISSM_DIR}/externalpackages/codipack/install" 
          
      - name: Compile ISSM
        run: make -j4 install

      - name: Compress ISSM artifact
        run: tar --exclude='./externalpackages/petsc/src' -cvf ISSM_artifact-${{ inputs.build_type}}.tar -C ${{ env.ISSM_DIR }}/ .
        
      - name: Upload ISSM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ISSM-${{ runner.os }}-${{ inputs.build_type}}
          path: ISSM_artifact-${{ inputs.build_type}}.tar
          compression-level: 1          
  test:
    runs-on: ${{ inputs.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test-cases: 
          - '101:399'
          - '401:899'
          - '3015, 3119, 3480, 3201:3206'
        build-type:
          -  ${{ inputs.build_type }}
        additional: 
          - " "
          - "'benchmark','all',"
        exclude:
          - build-type: 'basic'
            additional: "'benchmark','all',"
          - build-type: 'basic'
            test-cases: '3015, 3119, 3480, 3201:3206'
          - build-type: 'codipack'
            additional: " "
          - build-type: 'codipack'
            test-cases: '101:399'
          - build-type: 'codipack'
            test-cases: '401:899'

    steps:
      - name: Download ISSM artifact
        uses: actions/download-artifact@v4
        with:
          name: ISSM-${{ runner.os }}-${{ inputs.build_type}}
          path: ${{ env.ISSM_DIR }}
      
      - name: uncompress ISSM artifact
        run: |
          tar -xvf ISSM_artifact-${{ inputs.build_type}}.tar
          source $ISSM_DIR/etc/environment.sh
        working-directory: ${{ env.ISSM_DIR }}
        shell: 'bash'
          
      - name: Get MATLAB
        id:   setup-matlab
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          cache: true
          
      - name: Creating matlab_ci.m
        run: |
          cat > ${ISSM_DIR}/matlab_ci.m << EOF
          % Go to the test directory
          cd $ISSM_DIR/test/NightlyRun/

          % Add ISSM tools to path
          addpath('${ISSM_DIR}/src/m/dev');
          devpath;

          % Run tests
          runme('exclude',[IdFromString('Dakota')],${{matrix.additional}} 'id',[${{matrix.test-cases}}],'quitonerror',1);
          quit(0);
          EOF
          cat ${ISSM_DIR}/matlab_ci.m
          
      - name: Get run-matlab-command
        run: |
          wget -O /usr/local/bin/run-matlab-command https://ssd.mathworks.com/supportfiles/ci/run-matlab-command/v2/glnxa64/run-matlab-command
          chmod +x /usr/local/bin/run-matlab-command
          
      - name: Run MATLAB tests
        run: |
          source $ISSM_DIR/etc/environment.sh
          LD_PRELOAD=/lib/x86_64-linux-gnu/libstdc++.so.6:$ISSM_DIR/externalpackages/petsc/install/lib/libmpi.so:$ISSM_DIR/externalpackages/petsc/install/lib/libmpifort.so run-matlab-command "matlab_ci"
